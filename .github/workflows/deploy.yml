name: deploy
on:
  workflow_call:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true
      ci_call:
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true
jobs:
  check_delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve catalog delivery
      if: inputs.ci_call != true
      # https://github.com/dawidd6/action-download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: deliver.yml
        branch: main
        run_number: ${{ inputs.delivery }}
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
    - name: Re-up delivery from catalog -> current
      if: inputs.ci_call != true
      uses: actions/upload-artifact@v3
      with:
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
  deploy:
    needs: check_delivery
    runs-on: ubuntu-latest
    steps:
    - name: Get deliverables
      uses: actions/download-artifact@v3
      with:
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
    - name: Get shas
      run: |
        echo SHA_IAC_BICEP=$(sha256sum deliverable/iac/bicep.tar.gz) >> $GITHUB_ENV
        echo SHA_SRC_EXTRACTOR=$(sha256sum deliverable/source/extractor.tar.gz) >> $GITHUB_ENV
    - id: get_map
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: deploy.yml
        workflow_conclusion: success
        branch: main
        name: deployment_map
        path: deployment_map
    - id: read_map
      run: |
        map={}
        if [ '${{ steps.get_map.outcome }}' == 'success']; then
          map={ "dev": "123" }
        fi
        echo "::set-output name=map::$map"
    - name: Merge deployment map
      uses: actions/github-script@v6
      with:
        script: |
          let og = JSON.parse('${{ steps.read_map.outputs.map }}');
          return { ...og, '${{ inputs.environment }}': {
            'iac_bicep': '${{ env.SHA_IAC_BICEP }}',
            'src_extractor': '${{ env.SHA_SRC_EXTRACTOR }}'
          }};