name: deploy
on:
  workflow_call:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true
      ci_call:
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve catalog delivery
      uses: dawidd6/action-download-artifact@v2 # https://github.com/dawidd6/action-download-artifact
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: deliver.yml
        workflow_conclusion: ${{ inputs.ci_call == true && 'in_progress' || 'success' }}
        branch: main
        run_number: inputs.delivery
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
    - name: Get shas
      run: |
        echo SHA_IAC_BICEP=$(sha256sum deliverable/iac/bicep.tar.gz) >> $GITHUB_ENV
        echo SHA_SRC_EXTRACTOR=$(sha256sum deliverable/source/extractor.tar.gz) >> $GITHUB_ENV
    - id: get_map
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: deploy.yml
        workflow_conclusion: success
        branch: main
        name: deployment_map
        path: deployment_map
    - id: read_map
      run: |
        map={ '${{ inputs.environment }}': { } }
        if [ '${{ steps.get_map.outcome }}' == 'success' ]; then
          map=$(<deployment_map/deployment_map.json)
        fi
        echo "::set-output name=map::$map"
    
    # Deploy iac/bicep
    - name: Deploy iac/bicep [1] - extract
      if: fromJson(steps.read_map.outputs.map)[inputs.environment].iac_bicep != '${{ env.SHA_IAC_BICEP }}'
      run: tar xfz deliverable/iac/bicep.tar.gz
    - name: Deploy iac/bicep [2] - deploy from template
      if: fromJson(steps.read_map.outputs.map)[inputs.environment].iac_bicep != '${{ env.SHA_IAC_BICEP }}'
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUB_ID }}
        resourceGroupName: ${{ inputs.environment }}-rg-${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}
        template: deliverable/iac/main.bicep
        parameters:
          sqlConnection=blort-sql
          appInsightsConnection=${{ secrets.AZURE_INSIGHTS }}
          sourceDocsStorageAccountName=${{ inputs.environment }}stgsharedweu
          exportBlobStorageAccountName=${{ inputs.environment }}stgsharedweu
          exportBlobContainerName=export

    - name: Merge deployment map
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const og = JSON.parse('${{ steps.read_map.outputs.map }}');
          const merged = { ...og, '${{ inputs.environment }}': {
            'iac_bicep': '${{ env.SHA_IAC_BICEP }}',
            'src_extractor': '${{ env.SHA_SRC_EXTRACTOR }}'
          }};
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/deployment_map.json`, Buffer.from(JSON.stringify(merged)));
    - name: Upload deployment map
      uses: actions/upload-artifact@v3
      with:
        name: deployment_map
        path: deployment_map.json 