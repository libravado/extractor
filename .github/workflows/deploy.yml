name: deploy
on:
  workflow_call:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true # OPTIONS: DEV
      ci_call:
        type: boolean
        default: true
  workflow_dispatch:
    inputs:
      delivery:
        description: Delivery ref no.
        type: number
        required: true
      environment:
        description: Environment prefix
        type: string
        required: true # OPTIONS: TEST, UAT, PROD
jobs:
  check_delivery:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve catalog delivery
      if: inputs.ci_call != true
      # https://github.com/dawidd6/action-download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: deliver.yml
        branch: main
        run_number: ${{ inputs.delivery }}
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
    - name: Re-up delivery from catalog -> current
      if: inputs.ci_call != true
      uses: actions/upload-artifact@v3
      with:
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
  deploy:
    needs: check_delivery
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SCM_CREDS }}
    - name: Upgrade AZ Bicep
      run: az bicep upgrade
    - name: Get deliverables
      uses: actions/download-artifact@v3
      with:
        name: 'delivery-${{ inputs.delivery }}'
        path: deliverable
    - name: Extract archives 4 SHAs
      run: |
        mkdir -p extract/iac/bicep && tar xfz deliverable/iac/bicep.tar.gz -C $_
        mkdir -p extract/source/extractor && tar xfz deliverable/source/extractor.tar.gz -C $_
        echo SHA_IAC_BICEP=$(sha256sum <(find ./extract/iac/bicep -type f -exec sha256sum {} +) | cut -b 1-64) >> $GITHUB_ENV
        echo SHA_SRC_EXTRACTOR=$(sha256sum <(find ./extract/source/extractor -type f -exec sha256sum {} +) | cut -b 1-64) >> $GITHUB_ENV
    - id: get_map
      name: Get map
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: ${{ inputs.ci_call != true && 'deploy.yml' || 'deliver.yml' }}
        workflow_conclusion: success
        branch: main
        name: ${{ inputs.ci_call != true && 'deployment_map' || 'deployment_map_ci' }}
        path: deployment_map
    - id: read_map
      name: Read map
      run: |
        map="{ ${{ inputs.environment }}: { } }"
        if [ '${{ steps.get_map.outcome }}' == 'success' ]; then
          map=$(<deployment_map/deployment_map.json)
        fi
        echo "::set-output name=map::$map"

    # Deploy iac/bicep
    - name: Deployable iac/bicep - check for changes
      run: |
        echo "oldsha: ${{ fromJson(steps.read_map.outputs.map)[inputs.environment].iac_bicep }}"
        echo "newsha: ${{ env.SHA_IAC_BICEP }}"
    - name: Deployable iac/bicep - deploy (if changed)
      if: fromJson(steps.read_map.outputs.map)[inputs.environment].iac_bicep != env.SHA_IAC_BICEP
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUB_ID }}
        resourceGroupName: ${{ inputs.environment }}-rg-${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}
        template: extract/iac/bicep/main.bicep
        parameters:
          sqlConnection=blort-sql
          appInsightsConnection=${{ secrets.AZURE_INSIGHTS }}
          sourceDocsStorageAccountName=${{ inputs.environment }}stgsharedweu
          exportBlobStorageAccountName=${{ inputs.environment }}stgsharedweu
          exportBlobContainerName=export

    # Deploy source/extractor
    - name: Deployable source/extractor - check for changes
      run: |
        echo "oldsha: ${{ fromJson(steps.read_map.outputs.map)[inputs.environment].src_extractor }}"
        echo "newsha: ${{ env.SHA_SRC_EXTRACTOR }}"
    - name: Deployable source/extractor - get publish profile (if changed)
      if: fromJson(steps.read_map.outputs.map)[inputs.environment].src_extractor != env.SHA_SRC_EXTRACTOR
      run: |
        pubProfileXml=$(az functionapp deployment list-publishing-profiles -g "${{ inputs.environment }}-rg-${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}" -n "${{ inputs.environment }}-app-func${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}" --xml)
        echo "::add-mask::$pubProfileXml"
        echo PUB_PROFILE_XML=$pubProfileXml >> $GITHUB_ENV
    - name: Deployable source/extractor - publish (if changed)
      if: fromJson(steps.read_map.outputs.map)[inputs.environment].src_extractor != env.SHA_SRC_EXTRACTOR
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ inputs.environment }}-app-func${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}
        package: extract/source/extractor
        publish-profile: ${{ env.PUB_PROFILE_XML }}

    - name: Merge deployment map
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const merged = { ...${{ steps.read_map.outputs.map }}, ${{ inputs.environment }}: {
            'iac_bicep': '${{ env.SHA_IAC_BICEP }}',
            'src_extractor': '${{ env.SHA_SRC_EXTRACTOR }}'
          }};
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/deployment_map.json`, Buffer.from(JSON.stringify(merged)));
    - name: Upload deployment map
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.ci_call != true && 'deployment_map' || 'deployment_map_ci' }}
        path: deployment_map.json 