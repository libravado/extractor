name: CD Extractor Func
on:
  workflow_run:
    workflows:
    - CI Extractor Func
    types:
    - completed
    branches:
    - main
    paths:
    - source/ExtractorFunc/**
jobs:
  readci:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      ci: ${{ steps.cacheci.outputs.ci }}
    steps:
    - name: Download artifact - ci outputs
      uses: actions/github-script@v6
      with:
        script: |
          const owner = context.repo.owner, repo = context.repo.repo;
          const artifactMetas = await github.rest.actions.listWorkflowRunArtifacts({ owner, repo, run_id: context.payload.workflow_run.id });
          const artifact_id = artifactMetas.data.artifacts.filter(a => a.name == "outputs")[0].id;
          const artifact = await github.rest.actions.downloadArtifact({ owner, repo, artifact_id, archive_format: 'zip' });
          const fs = require('fs');
          fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/outputs.zip`, Buffer.from(artifact.data));
    - id: cacheci
      run: |
        unzip outputs.zip
        jsonvalue=$(<outputs.json)
        echo "::set-output name=ci::$jsonvalue"

  on-ci-success:
    needs: readci
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      ENV_PREFIX: ${{ toJson(needs.readci.outputs.ci).env }}
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SCM_CREDS }}
    - name: Upgrade bicep
      run: az bicep upgrade
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Build app
      run: |
        dotnet build ./source/ExtractorFunc -c Release -o '${{ github.workspace }}/published'
        pubProfileXml=$(az functionapp deployment list-publishing-profiles -g "${{ env.ENV_PREFIX }}-rg-${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}" -n "${{ env.ENV_PREFIX }}-app-func${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}" --xml)
        echo "::add-mask::$pubProfileXml"
        echo PUB_PROFILE_XML=$pubProfileXml >> $GITHUB_ENV
    - name: Publish func
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.ENV_PREFIX }}-app-func${{ secrets.AZURE_WORKLOAD }}-${{ secrets.AZURE_RG_LOC }}
        package: '${{ github.workspace }}/published'
        publish-profile: ${{ env.PUB_PROFILE_XML }}
  on-ci-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow  ${{ github.event.workflow_run.name}} failed'